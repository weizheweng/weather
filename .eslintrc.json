{
  "env": {
    "browser": true,
    "es2021": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "love"
  ],
  "overrides": [
    {
      "env": {
        "node": true
      },
      "files": [
        ".eslintrc.{js,cjs,json}",
        "*.ts",
        "*.tsx"
      ],
      "parserOptions": {
        "sourceType": "script"
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": [
      "./tsconfig.json",
      "./tsconfig.node.json"
    ]
  },
  "plugins": [
    "react"
  ],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-indent": [
      "warn",
      2,
      {
        "checkAttributes": true,
        "indentLogicalExpressions": true
      }
    ],
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/no-confusing-void-expression": "off",
    "@typescript-eslint/triple-slash-reference": "off",
    "react/self-closing-comp": "warn",
    "react/jsx-indent-props": ["warn", 2],
    "react/jsx-tag-spacing": [
      "warn",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "react/jsx-curly-brace-presence": [
      "error"
    ],
    "@typescript-eslint/prefer-nullish-coalescing": "off",
    "comma-dangle": "off",
    "@typescript-eslint/comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "only-multiline",
        "generics": "ignore"
      }
    ],
    "indent": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "comma",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        },
        "multilineDetection": "brackets"
      }
    ],
    "no-unused-vars": "off",
    "space-before-function-paren": "off",
    "space-infix-ops": "off",
    "semi": "off",
    "@typescript-eslint/semi": [
      "error",
      "never"
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-process-env": [
      "error"
    ],
    "react/prop-types": "off",
   "react/jsx-closing-bracket-location": ["warn", "tag-aligned"],
    "jsx-quotes": [
      "warn",
      "prefer-double"
    ],
    "react/jsx-curly-spacing": [
      "warn",
      {
        "when": "never",
        "children": true
      }
    ],
    "react/jsx-fragments": "warn",
    "react/jsx-equals-spacing": [
      2,
      "never"
    ],
    "object-shorthand": "warn",
    "react/jsx-one-expression-per-line": [
      "error",
      {
        "allow": "single-child"
      }
    ],
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-no-useless-fragment": "off",
    "@typescript-eslint/no-throw-literal": "off",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/no-dynamic-delete": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/non-nullable-type-assertion-style": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/promise-function-async": "off",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/space-before-function-paren": "error",
    "@typescript-eslint/space-infix-ops": "error",
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array"
      }
    ],
    "@typescript-eslint/no-extra-semi": "error",
    "no-extra-semi": "off"
  }
}
